import{aw as j,bs as G,bt as V,bu as H,bv as w,bw as B,ax as k,bx as C,b7 as E,az as _,by as T,aA as P,y as N,aB as D,aC as F,b3 as I,aX as L,bz as X,a as q}from"./index.ca3d1873.js";import{g as R}from"./useBVHMap.950ec098.js";import{b as J}from"./computeBVH.f0eff39e.js";const m=new Set,K=()=>new WeakSet;j(function(){if(w())return;const n=R();if(!n.length)return;const o=G(),M=V(),c=.02,d=H()?B:void 0,A=k(()=>{C.clear();for(const t of m){const e=t.bvhVelocity,s=t.outerObject3d,h=t.bvhHalfHeight,i=d?h:t.bvhRadius,b=t.bvhDir=d&&E(s).sub(d).normalize();b?e.add(t.bvhOnGround||t._gravity===!1?B:b.clone().multiplyScalar(c*-o)):e.y+=t.bvhOnGround||t._gravity===!1?0:c*-o;const{position:l}=t.physicsUpdate;t.physicsUpdate={},l&&(l.x&&(e.x=0),l.y&&(e.y=0),l.z&&(e.z=0)),s.position.addScaledVector(e,c),s.updateMatrixWorld();const{start:r,end:u}=P;u.copy(r.copy(s.position));const S=Math.max(h-i,0);u.y+=S,r.y-=S;const U=r.clone();_.setFromCenterAndSize(s.position,T.set(i*2,h*2,i*2));const x=D,O=F;let f=0,p,y=!1,v;for(const z of n)v=J.get(z),z.shapecast({intersectsBounds:g=>g.intersectsBox(_),intersectsTriangle:g=>{f=g.closestPointToSegment(P,x,O),f<i&&(y=!0,p=O.sub(x).normalize().multiplyScalar(i-f),r.add(p),u.add(p))}});y&&v&&N(C,t,K).add(v);const a=r.sub(U);b?t.bvhOnGround=y:(t.bvhOnGround=a.y>Math.abs(c*e.y*.25),M&&t.bvhOnGround&&Math.abs(a.y/(a.x+a.z+Number.EPSILON))<M&&(t.bvhOnGround=!1));const W=Math.max(0,a.length()-1e-5);a.normalize().multiplyScalar(W),s.position.add(a),t.bvhOnGround?e.set(0,0,0):(a.normalize(),e.addScaledVector(a,-a.dot(e)))}});return()=>{A.cancel()}},[R,G,V,H,w]);function $(n){if(n.done)return;I.attach(this.outerObject3d),this instanceof L&&(this.width=this.depth=Math.min(this.width,this.depth)),this.physicsUpdate={};const o=X(this).multiplyScalar(.5);this.bvhHalfHeight=Math.max(o.y,.5),this.bvhRadius=Math.max(o.x,.5),this.bvhVelocity=new q,m.add(this),n.then(()=>{m.delete(this),this.physicsUpdate=void 0})}export{$ as default};
